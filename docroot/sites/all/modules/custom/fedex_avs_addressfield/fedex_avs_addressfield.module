<?php

/**
 * @file
 * Bridges the FedEx AVS API module with Address Field module.
 */

/**
 * Display custom configuration fields in field settings form.
 * Implements hook_form_FORM_ID_alter().
 */
function fedex_avs_addressfield_form_field_ui_field_edit_form_alter(&$form, $form_state) {

  // Work only on addressfield fields
  $field = $form['#field'];
  if ('addressfield' !== $field['type']) {
    return;
  }

  // Define custom settings
  $form['instance']['fedex_avs_validate'] = array(
    '#type' => 'checkbox',
    '#title' => t('FedEx Address Validation'),
    '#description' => t('Validate the field with the FedEx Address Validation Service.'),
    '#default_value' => isset($form['#instance']['fedex_avs_validate'])
      ? $form['#instance']['fedex_avs_validate'] : 0,
  );

  // Allow selection of specific forms
  // @todo Display form_id checkboxes instead of textarea
  $form['instance']['fedex_avs_forms_rule'] = array(
    '#type' => 'radios',
    '#title' => t('Validate specific forms'),
    '#options' => array(
      'w' => t('Validate only the specified forms'),
      'b' => t('Validate all but the specified forms'),
    ),
    '#default_value' => isset($form['#instance']['fedex_avs_forms_rule'])
      ? $form['#instance']['fedex_avs_forms_rule'] : 'w',
    '#states' => array(
      'visible' => array(
        '#edit-instance-fedex-avs-validate' => array('checked' => TRUE),
      ),
      'invisible' => array(
        '#edit-instance-fedex-avs-validate' => array('unchecked' => TRUE),
      ),
    ),
  );
  $form['instance']['fedex_avs_forms_list'] = array(
    '#type' => 'textarea',
    '#description' => t('Enter one Form ID per line. Example: user_register_form'),
    '#default_value' => isset($form['#instance']['fedex_avs_forms_list'])
      ? $form['#instance']['fedex_avs_forms_list'] : '',
    '#states' => array(
      'visible' => array(
        '#edit-instance-fedex-avs-validate' => array('checked' => TRUE),
      ),
      'invisible' => array(
        '#edit-instance-fedex-avs-validate' => array('unchecked' => TRUE),
      ),
    ),
  );

}

/**
 * Inject validation callbacks for elements if validation is enabled.
 * Implements hook_field_widget_WIDGET_TYPE_form_alter();
 */
function fedex_avs_addressfield_field_widget_addressfield_standard_form_alter(&$element, &$form_state, $context) {

  // To validate... Or to not to validate... That is the question.
  $instance = $context['instance'];
  if (!isset ($instance['fedex_avs_validate']) || !$instance['fedex_avs_validate']) {
    return;
  }

  // Validate specific forms
  if (isset ($instance['fedex_avs_forms_list']) && !empty ($instance['fedex_avs_forms_list'])) {

    $forms_list = preg_split('/[\\r]?[\\n]/', $instance['fedex_avs_forms_list']);
    $forms_rule = $instance['fedex_avs_forms_rule'];
    $form_id = $form_state['build_info']['form_id'];

    // Blacklist
    if ('b' === $forms_rule) {
      if (in_array($form_id, $forms_list)) {
        return;
      }
    }
    // Whitelist
    else {
      if (!in_array($form_id, $forms_list)) {
        return;
      }
    }

  }

  // Attach bypass checkbox
  $element['fedex_avs_bypass'] = array(
    '#type' => 'checkbox',
    '#title' => t('Ignore address validation'),
    '#weight' => -999,
  );

  // Attach validate callback
  if (!isset ($element['#element_validate'])) {
    $element['#element_validate'] = array();
  }
  $element['#element_validate'][] = 'fedex_avs_addressfield_element_validate';

  // Attach pre-render callback
  if (!isset ($element['#pre_render'])) {
    $element['#pre_render'] = array();
  }
  $element['#pre_render'][] = '_fedex_avs_addressfield_element_prerender';

}

/**
 * Form element validation callback.
 */
function fedex_avs_addressfield_element_validate(&$element, &$form_state, $form) {

  // Get the value
  $value = drupal_array_get_nested_value($form_state['values'], $element['#parents']);

  // Skip validation if any of the required values are empty.
  $field_map = array(
    'StreetLines' => array('street_block', 'thoroughfare'),
    'City' => array('locality_block', 'locality'),
    'StateOrProvinceCode' => array('locality_block', 'administrative_area'),
    'PostalCode' => array('locality_block', 'postal_code'),
    'CountryCode' => array('country'),
  );
  foreach ($field_map as $drupal_fields) {
    $drupal_field = end($drupal_fields);
    if (empty($value[$drupal_field])) {
      return;
    }
  }

  // Mark bypass checkbox as visible
  $invalid_elements = &drupal_static('fedex_avs_invalid_elements', array());
  $invalid_elements[$element['#id']] = TRUE;
  
  if (!$value['fedex_avs_bypass']) {

    // Validate the address with FedEx.
    $addresses = array($value);
    $response = fedex_avs_validate_addresses($addresses);

    // Display errors, if any
    if ($response && isset ($response->AddressResults) && sizeof($response->AddressResults->Errors) > 0) {

      // Translate error messages
      foreach ($response->AddressResults->Errors as &$error) {
        $error = t($error);
        unset($error);
      }

      // Display error message
      $message = t('FedEx services pointed out the following errors in your address: !error Please correct your address if it seems necessary otherwise, mark the checkbox %checkbox-label below and try again.', array(
          '!error' => theme('item_list', array('items' => $response->AddressResults->Errors)),
          '%checkbox-label' => $element['fedex_avs_bypass']['#title'],
        ));
      form_error($element, $message);

    }
    // If there are no errors, hide the bypass checkbox
    else {
      unset ($invalid_elements[$element['#id']]);
    }

  }

}

/**
 * Since FAPI does not save changes made to form element structure during
 * the widget validation process, this pre-render callback, along with flags
 * stored in drupal_static() identifies valid/invalid address fields and
 * hides the "bypass validation" checkbox for valid fields.
 * 
 * @todo Is there a better way to do this?
 *
 * Implements Form element pre-render callback.
 */
function _fedex_avs_addressfield_element_prerender($element) {

  $invalid_elements = &drupal_static('fedex_avs_invalid_elements', array());
  if (!isset ($invalid_elements[$element['#id']])) {
    hide($element['fedex_avs_bypass']);
  }
  return $element;

}
